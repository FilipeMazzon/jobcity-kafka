version: '3'
services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - kafka-zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-zookeeper:
        image: confluentinc/cp-zookeeper:7.2.1
        ports:
          - '2181:2181'
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_SERVER_ID: 1
          ZOOKEEPER_SERVERS: kafka-zookeeper:2888:3888
  kafdrop:
      image: obsidiandynamics/kafdrop:latest
      networks:
        - broker-kafka
      depends_on:
        - kafka
      ports:
        - "19000:9000"
      environment:
        KAFKA_BROKERCONNECT: kafka:29092
  mongodb:
      image: mongo:latest
      env_file:
        - .env
      ports:
        - "27017:27017"
      networks:
        - broker-kafka
      volumes:
        - mongodb_data_container:/data/db
  kafka-consumer:
      build: ./kafka-consumer
      container_name: kafka-consumer
      depends_on:
        - mongodb
        - kafka
      networks:
        - broker-kafka
      ports:
        - "3000:3000"
        - "9229:9229"
      command: npm run start:prod
  kafka-producer:
      build: ./kafka-producer
      container_name: kafka-producer
      env_file:
        - kafka-producer/.env
      depends_on:
        - kafka
      networks:
        - broker-kafka
      ports:
        - "3001:3001"
networks:
  broker-kafka:
    driver: bridge

volumes:
  mongodb_data_container: