version: '3'
services:
  mongodb:
    image: mongo:latest
    env_file:
      - .env
    ports:
      - "27017:27017"
    networks:
      - broker-kafka
    volumes:
      - mongodb_data_container:/data/db
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
  kafka-consumer:
    build: ./kafka-consumer
    container_name: kafka-consumer
    depends_on:
      - mongodb
      - kafka
    volumes:
      - "./kafka-consumer:/src/app"
    working_dir: "/src/app"
    networks:
      - broker-kafka
    ports:
      - "3000:3000"
      - "9229:9229"
    command: npm run start:dev
  kafka-producer:
    build: ./kafka-producer
    container_name: kafka-producer
    depends_on:
      - kafka
    volumes:
      - "./kafka-producer:/src/app"
    working_dir: "/src/app"
    networks:
      - broker-kafka
    ports:
      - "3001:3001"
networks:
  broker-kafka:
    driver: bridge

volumes:
  mongodb_data_container: